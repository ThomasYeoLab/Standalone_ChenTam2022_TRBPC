function avg_rel_blk = CBIG_TRBPC_avg_network_pairs_relevance(corr_mat)
% avg_rel_blk = CBIG_TRBPC_avg_network_pairs_relevance(corr_mat)
% This function average values within network blocks for a 419x419 matrix that 
% is already re-arranged according to the scale 18 (17 major networks +
% subcortical regions) order
%
% required input: 
% - corr_mat: 419 x 419 matrix
%
% output:
% - avg_rel_blk: a 18 x 18 symmetric matrix that contains the average
% relevance values for each network-network pair/block
%
% Written by Angela Tam & CBIG under MIT license: https://github.com/ThomasYeoLab/CBIG/blob/master/LICENSE.md

%% function starts here

% set indices for each network inside the (pre-)rearranged matrix
struct_ind = [];
struct_ind.temppar = 1:16;
struct_ind.dmnC = 17:29;
struct_ind.dmnB = 30:61;
struct_ind.dmnA = 62:95;
struct_ind.contC = 96:107;
struct_ind.contB = 108:132;
struct_ind.contA = 133:156;
struct_ind.limB = 157:169;
struct_ind.limA = 170:180;
struct_ind.salventattB = 181:197;
struct_ind.salventattA = 198:231;
struct_ind.dorsattB = 232:256;
struct_ind.dorsattA = 257:283;
struct_ind.sommotB = 284:314;
struct_ind.sommotA = 315:353;
struct_ind.visB = 354:376;
struct_ind.visA = 377:400;
struct_ind.subcort = 401:419;

[networks,blocks] = generate_block_pairs;

avg_rel_blk = zeros(18,18);

for bb = 1:length(blocks)
    blk = blocks{bb};
    tmp = strsplit(blk,'_');
    net_a = tmp{1};
    net_b = tmp{2};
    ind_net_a = find(contains(networks,net_a));
    ind_net_b = find(contains(networks,net_b));
    % take that block from the matrix
    corr_blk = corr_mat(struct_ind.(net_b),struct_ind.(net_a));
    
    % if that block is on the diagonal
    if isequal(net_a,net_b)
        % make a mask of the lower triangle of that block
        mask_blk_tril = tril(ones(size(corr_blk,1),size(corr_blk,2)),-1);
        % average the values of the lower triangle of that block
        corr_vec_tril = corr_blk(mask_blk_tril==1);
        avg_rel_blk(ind_net_a,ind_net_b) = mean(corr_vec_tril);
        avg_rel_blk(ind_net_b,ind_net_a) = mean(corr_vec_tril);
    else
        % average the values of the entire block
        avg_rel_blk(ind_net_a,ind_net_b) = mean(corr_blk(:));
        avg_rel_blk(ind_net_b,ind_net_a) = mean(corr_blk(:));
    end
    
    
end


function [networks,blocks] = generate_block_pairs
blocks = {'temppar_dmnC',...
  'temppar_dmnB',...
  'temppar_dmnA',...
  'temppar_contC',...
  'temppar_contB',...
  'temppar_contA',...
  'temppar_limB',...
  'temppar_limA',...
  'temppar_salventattB',...
  'temppar_salventattA',...
  'temppar_dorsattB',...
  'temppar_dorsattA',...
  'temppar_sommotB',...
  'temppar_sommotA',...
  'temppar_visB',...
  'temppar_visA',...
  'temppar_subcort',...
  'dmnC_dmnB',...
  'dmnC_dmnA',...
  'dmnC_contC',...
  'dmnC_contB',...
  'dmnC_contA',...
  'dmnC_limB',...
  'dmnC_limA',...
  'dmnC_salventattB',...
  'dmnC_salventattA',...
  'dmnC_dorsattB',...
  'dmnC_dorsattA',...
  'dmnC_sommotB',...
  'dmnC_sommotA',...
  'dmnC_visB',...
  'dmnC_visA',...
  'dmnC_subcort',...
  'dmnB_dmnA',...
  'dmnB_contC',...
  'dmnB_contB',...
  'dmnB_contA',...
  'dmnB_limB',...
  'dmnB_limA',...
  'dmnB_salventattB',...
  'dmnB_salventattA',...
  'dmnB_dorsattB',...
  'dmnB_dorsattA',...
  'dmnB_sommotB',...
  'dmnB_sommotA',...
  'dmnB_visB',...
  'dmnB_visA',...
  'dmnB_subcort',...
  'dmnA_contC',...
  'dmnA_contB',...
  'dmnA_contA',...
  'dmnA_limB',...
  'dmnA_limA',...
  'dmnA_salventattB',...
  'dmnA_salventattA',...
  'dmnA_dorsattB',...
  'dmnA_dorsattA',...
  'dmnA_sommotB',...
  'dmnA_sommotA',...
  'dmnA_visB',...
  'dmnA_visA',...
  'dmnA_subcort',...
  'contC_contB',...
  'contC_contA',...
  'contC_limB',...
  'contC_limA',...
  'contC_salventattB',...
  'contC_salventattA',...
  'contC_dorsattB',...
  'contC_dorsattA',...
  'contC_sommotB',...
  'contC_sommotA',...
  'contC_visB',...
  'contC_visA',...
  'contC_subcort',...
  'contB_contA',...
  'contB_limB',...
  'contB_limA',...
  'contB_salventattB',...
  'contB_salventattA',...
  'contB_dorsattB',...
  'contB_dorsattA',...
  'contB_sommotB',...
  'contB_sommotA',...
  'contB_visB',...
  'contB_visA',...
  'contB_subcort',...
  'contA_limB',...
  'contA_limA',...
  'contA_salventattB',...
  'contA_salventattA',...
  'contA_dorsattB',...
  'contA_dorsattA',...
  'contA_sommotB',...
  'contA_sommotA',...
  'contA_visB',...
  'contA_visA',...
  'contA_subcort',...
  'limB_limA',...
  'limB_salventattB',...
  'limB_salventattA',...
  'limB_dorsattB',...
  'limB_dorsattA',...
  'limB_sommotB',...
  'limB_sommotA',...
  'limB_visB',...
  'limB_visA',...
  'limB_subcort',...
  'limA_salventattB',...
  'limA_salventattA',...
  'limA_dorsattB',...
  'limA_dorsattA',...
  'limA_sommotB',...
  'limA_sommotA',...
  'limA_visB',...
  'limA_visA',...
  'limA_subcort',...
  'salventattB_salventattA',...
  'salventattB_dorsattB',...
  'salventattB_dorsattA',...
  'salventattB_sommotB',...
  'salventattB_sommotA',...
  'salventattB_visB',...
  'salventattB_visA',...
  'salventattB_subcort',...
  'salventattA_dorsattB',...
  'salventattA_dorsattA',...
  'salventattA_sommotB',...
  'salventattA_sommotA',...
  'salventattA_visB',...
  'salventattA_visA',...
  'salventattA_subcort',...
  'dorsattB_dorsattA',...
  'dorsattB_sommotB',...
  'dorsattB_sommotA',...
  'dorsattB_visB',...
  'dorsattB_visA',...
  'dorsattB_subcort',...
  'dorsattA_sommotB',...
  'dorsattA_sommotA',...
  'dorsattA_visB',...
  'dorsattA_visA',...
  'dorsattA_subcort',...
  'sommotB_sommotA',...
  'sommotB_visB',...
  'sommotB_visA',...
  'sommotB_subcort',...
  'sommotA_visB',...
  'sommotA_visA',...
  'sommotA_subcort',...
  'visB_visA',...
  'visB_subcort',...
  'visA_subcort',...
  'temppar_temppar',...
  'dmnC_dmnC',...
  'dmnB_dmnB',...
  'dmnA_dmnA',...
  'contC_contC',...
  'contB_contB',...
  'contA_contA',...
  'limB_limB',...
  'limA_limA',...
  'salventattB_salventattB',...
  'salventattA_salventattA',...
  'dorsattB_dorsattB',...
  'dorsattA_dorsattA',...
  'sommotB_sommotB',...
  'sommotA_sommotA',...
  'visB_visB',...
  'visA_visA',...
  'subcort_subcort'};

networks = {'temppar',...
    'dmnC',...
    'dmnB',...
    'dmnA',...
    'contC',...
    'contB',...
    'contA',...
    'limB',...
    'limA',...
    'salventattB',...
    'salventattA',...
    'dorsattB',...
    'dorsattA',...
    'sommotB',...
    'sommotA',...
    'visB',...
    'visA',...
    'subcort'};
end
end
